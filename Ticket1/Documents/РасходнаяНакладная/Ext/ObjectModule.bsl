
Процедура ОбработкаПроведения(Отказ, Режим)
	
	ОбработкаПроведенияОУ(Отказ);
	ОбработкаПроведенияБУ(Отказ);

		
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!


	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ОбработкаПроведенияОУ(Отказ)
	УчетнаяПолитика = РегистрыСведений.УчетнаяПолитика.СрезПоследних(МоментВремени());
	
	Если УчетнаяПолитика.Количество() = 0 Тогда
		Отказ = Истина;
	Иначе
		МетодСписания = УчетнаяПолитика[0].МетодСписания;
		Если НЕ ЗначениеЗаполнено(МетодСписания) Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;	
	
	Если Отказ Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не задана Учетная политика!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Движения.ПартииНоменклатуры.Записывать = Истина;
	Движения.ПартииНоменклатуры.Записать();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПартииНоменклатуры");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = СписокНоменклатуры;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	Блокировка.Заблокировать();
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	&Склад КАК Склад,
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ
		|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
		|ГДЕ
		|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
		|	И РасходнаяНакладнаяСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Товар)
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Товары.Склад КАК Склад,
		|	ВТ_Товары.Номенклатура КАК Номенклатура,
		|	ВТ_Товары.Количество КАК Количество,
		|	ВТ_Товары.Сумма КАК Сумма,
		|	ПартииНоменклатурыОстатки.Партия КАК Партия,
		|	ЕСТЬNULL(ПартииНоменклатурыОстатки.КоличествоПартииОстаток, 0) КАК КоличествоПартии,
		|	ЕСТЬNULL(ПартииНоменклатурыОстатки.СуммаПартииОстаток, 0) КАК СуммаПартии,
		|	ВТ_Товары.Номенклатура.Представление КАК НоменклатураПредставление
		|ИЗ
		|	ВТ_Товары КАК ВТ_Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииНоменклатуры.Остатки(
		|				&МоментВремени,
		|				Номенклатура В
		|					(ВЫБРАТЬ
		|						ВТ_Товары.Номенклатура КАК Номенклатура
		|					ИЗ
		|						ВТ_Товары КАК ВТ_Товары)) КАК ПартииНоменклатурыОстатки
		|		ПО ВТ_Товары.Номенклатура = ПартииНоменклатурыОстатки.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПартииНоменклатурыОстатки.Партия.МоментВремени УБЫВ
		|ИТОГИ
		|	МАКСИМУМ(Количество),
		|	СУММА(КоличествоПартии)
		|ПО
		|	Номенклатура";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Если МетодСписания = Перечисления.УчетнаяПолитика.ФИФО Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ".МоментВремени УБЫВ", ".МоментВремени");
	КонецЕсли;	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Нет партий по указанным номенклатурам!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;	
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		Движение = Движения.ОстаткиНоменклатуры.ДобавитьРасход();
		Движение.Период = Дата;
		Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
		Движение.Склад = Склад;
		Движение.Количество = ВыборкаНоменклатура.Количество;
		
		НеХватаетКолво = ВыборкаНоменклатура.КоличествоПартии - ВыборкаНоменклатура.Количество;
		
		Если НеХватаетКолво < 0 Тогда
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не хватает партий по товару: "+ВыборкаНоменклатура.НоменклатураПредставление+" в кол-ве: "+НеХватаетКолво;
			Сообщение.Сообщить();
		КонецЕсли;
		
		Если Отказ Тогда
			Продолжить;	
		КонецЕсли;
		
		КоличествоСписать = ВыборкаНоменклатура.Количество;
		
		Выборка = ВыборкаНоменклатура.Выбрать();
	
		Пока КоличествоСписать > 0 И Выборка.Следующий() Цикл
			Себестоимость = КоличествоСписать / Выборка.КоличествоПартии * Выборка.СуммаПартии;
			
			Движение = Движения.ПартииНоменклатуры.ДобавитьРасход();
			Движение.Период = Дата;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.Партия = Выборка.Партия;
			Движение.КоличествоПартии = КоличествоСписать;
			Движение.СуммаПартии = Себестоимость;
			
			КоличествоСписать = КоличествоСписать - Выборка.КоличествоПартии;
		КонецЦикла;
		
	КонецЦикла;
	
	Движения.ОстаткиНоменклатуры.БлокироватьДляИзменения = Истина;
	Движения.ОстаткиНоменклатуры.Записать();
		
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
		|	ОстаткиНоменклатурыОстатки.Склад КАК Склад,
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ОстаткиНоменклатурыОстатки.Номенклатура.Представление КАК НоменклатураПредставление,
		|	ОстаткиНоменклатурыОстатки.Склад.Представление КАК СкладПредставление
		|ИЗ
		|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|			&Граница,
		|			(Номенклатура, Склад) В
		|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					ВТ.Номенклатура,
		|					ВТ.Склад
		|				ИЗ
		|					ВТ_Товары КАК ВТ)) КАК ОстаткиНоменклатурыОстатки
		|ГДЕ
		|	ОстаткиНоменклатурыОстатки.КоличествоОстаток < 0";
	
	Запрос.УстановитьПараметр("Граница", Новый Граница(МоментВремени(), ВидГраницы.Включая));
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		// Минусов нет
	Иначе
		Отказ = Истина;
	
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не хватает остатка по "+Выборка.НоменклатураПредставление+" на складе: "+Выборка.СкладПредставление+" в кол-ве: "+Выборка.КоличествоОстаток;
			Сообщение.Сообщить();	
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры	

Процедура ОбработкаПроведенияБУ(Отказ)

// регистр Управленческий 
	Движения.Управленческий.Записывать = Истина;
	Движения.Управленческий.Записать();
	
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрБухгалтерии.Управленческий");
	ЭлементБлокировки.УстановитьЗначение("Счет", ПланыСчетов.Управленческий.Товары);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = СписокНоменклатуры;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура, "Номенклатура");
	Блокировка.Заблокировать();
	
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
		
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	РасходнаяНакладнаяСписокНоменклатуры.Количество КАК КоличествоДок,
		|	РасходнаяНакладнаяСписокНоменклатуры.Сумма КАК СуммаДок
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ
		|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
		|ГДЕ
		|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура,
		|	РасходнаяНакладнаяСписокНоменклатуры.Количество,
		|	РасходнаяНакладнаяСписокНоменклатуры.Сумма
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Товары.Номенклатура КАК Номенклатура,
		|	ВТ_Товары.КоличествоДок КАК КоличествоДок,
		|	ВТ_Товары.СуммаДок КАК СуммаДок,
		|	УправленческийОстатки.СрокГодности КАК СрокГодности,
		|	ЕСТЬNULL(УправленческийОстатки.КоличествоОстатокДт, 0) КАК КоличествоОстатокДт,
		|	ЕСТЬNULL(УправленческийОстатки.СуммаРубОстатокДт, 0) КАК СуммаОстатокДт,
		|	ВТ_Товары.Номенклатура.Представление КАК НоменклатураПредставление
		|ИЗ
		|	ВТ_Товары КАК ВТ_Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Управленческий.Остатки(
		|				&МоментВремени,
		|				Счет = &СчетТовары,
		|				&Субконто,
		|				Субконто1 В
		|					(ВЫБРАТЬ
		|						ВТ_Товары.Номенклатура КАК Номенклатура
		|					ИЗ
		|						ВТ_Товары КАК ВТ_Товары)) КАК УправленческийОстатки
		|		ПО ВТ_Товары.Номенклатура = УправленческийОстатки.Субконто1
		|
		|УПОРЯДОЧИТЬ ПО
		|	СрокГодности
		|ИТОГИ
		|	МАКСИМУМ(КоличествоДок),
		|	СУММА(КоличествоОстатокДт)
		|ПО
		|	Номенклатура";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Субконто = новый Массив;
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
	Запрос.УстановитьПараметр("Субконто", Субконто);
	Запрос.УстановитьПараметр("СчетТовары", ПланыСчетов.Управленческий.Товары);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		Если ВыборкаНоменклатура.КоличествоДок > ВыборкаНоменклатура.КоличествоОстатокДт  Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "По номенклатуре "+ВыборкаНоменклатура.НоменклатураПредставление+" не хватает товара. Свободный остаток "+ВыборкаНоменклатура.КоличествоОстатокДт;
			Сообщение.Сообщить();
			
			Отказ = Истина;	
			Продолжить;
		КонецЕсли;
		
		КоличествоСписать = ВыборкаНоменклатура.КоличествоДок;
		Выборка = ВыборкаНоменклатура.Выбрать();
		
		Пока Выборка.Следующий() И КоличествоСписать > 0 Цикл
			МинимальноеКоличество = Мин(Выборка.КоличествоОстатокДт, КоличествоСписать);
			СуммаСписания = МинимальноеКоличество / Выборка.КоличествоОстатокДт * Выборка.СуммаОстатокДт;
			
			Движение = Движения.Управленческий.Добавить();
			Движение.СчетДт 		= ПланыСчетов.Управленческий.ПрибылиУбытки;
			Движение.СчетКт 		= ПланыСчетов.Управленческий.Товары;
			Движение.Период 		= Дата;
			Движение.СрокГодности 	= Выборка.СрокГодности;
			Движение.КоличествоКт 	= МинимальноеКоличество;	
			Движение.СуммаРуб 		= СуммаСписания;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
			
			Движение = Движения.Управленческий.Добавить();
			Движение.СчетДт 		= ПланыСчетов.Управленческий.Покупатели;
			Движение.СчетКт 		= ПланыСчетов.Управленческий.ПрибылиУбытки;
			Движение.Период 		= Дата;
			Движение.СрокГодности 	= Выборка.СрокГодности;
			Движение.СуммаРуб 		= Выборка.СуммаДок;
			
			КоличествоСписать = КоличествоСписать - МинимальноеКоличество;
		КонецЦикла;		
	КонецЦикла;

КонецПроцедуры
